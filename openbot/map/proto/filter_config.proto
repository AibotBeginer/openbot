// Copyright 2024 The OpenRobotic Beginner Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package openbot.map;

enum IOMethod {
  IO_METHOD_UNKNOWN = 0;
  IO_METHOD_READ = 1;
  IO_METHOD_MMAP = 2;
  IO_METHOD_USERPTR = 3;
}

enum OutputType {
  YUYV = 0;
  RGB = 1;
}

message FilterConfig {
  optional string camera_dev = 1;
  optional string frame_id = 2;
  // v4l pixel format
  optional string pixel_format = 3 [default = "yuyv"];
  // mmap, userptr, read
  optional IOMethod io_method = 4;
  optional uint32 width = 5;
  optional uint32 height = 6;
  optional uint32 frame_rate = 7;
  optional bool monochrome = 8 [default = false];

  optional int32 brightness = 9 [default = -1];
  optional int32 contrast = 10 [default = -1];
  optional int32 saturation = 11 [default = -1];
  optional int32 sharpness = 12 [default = -1];
  optional int32 gain = 13 [default = -1];

  optional bool auto_focus = 14 [default = false];
  optional int32 focus = 15 [default = -1];
  optional bool auto_exposure = 16 [default = true];
  optional int32 exposure = 17 [default = 100];
  optional bool auto_white_balance = 18 [default = true];
  optional int32 white_balance = 19 [default = 4000];
  optional uint32 bytes_per_pixel = 20 [default = 3];
  optional uint32 trigger_internal = 21 [default = 0];
  optional uint32 trigger_fps = 22 [default = 30];
  optional string channel_name = 23;
  optional string raw_channel_name = 24 [default = "/apollo/sensor/camera/raw/default"];
  // wait time when camera select timeout
  optional uint32 device_wait_ms = 25 [default = 2000];
  // camera select spin time
  optional uint32 spin_rate = 26 [default = 200];
  optional OutputType output_type = 27;

  message CompressConfig {
    optional string output_channel = 1;
    optional uint32 image_pool_size = 2 [default = 20];
    optional uint32 width = 3 [default = 1920];
    optional uint32 height = 4 [default = 1080];
  }
  optional CompressConfig compress_conf = 28;
  optional bool hardware_trigger = 29 [default = true];

  message TimeCompensatorConfig {
    optional bool enable_compensator = 1 [default = false];
    optional string compensator_fnode = 2 [default = ""];
  }
  optional TimeCompensatorConfig time_compensator_conf = 30;
  optional bool arm_gpu_acceleration = 31 [default = false];
}