syntax = "proto3";

package openbot.dreamview;

import "openbot/common_msgs/basic_msgs/geometry.proto";

message Options {
  message Axis {
    double min = 1;
    double max = 2;
    string label_string = 3;

    // size of the axis of your graph which is then divided into measuring
    // grades
    double window_size = 4;
    // size of the smaller measuring grades in the axis found between two larger
    // measuring grades
    double step_size = 5;
    // midpoint taken within the dataset. If it is not specified, we will
    // calculate it for you.
    double mid_value = 6;
  }

  bool legend_display = 1;
  Axis x = 2;
  Axis y = 3;

  // This is the aspect ratio (width/height) of the entire chart.
  double aspect_ratio = 4;

  // Same window size for x-Axis and y-Axis. It is
  // effective only if x/y window_size is NOT set.
  bool sync_xy_window_size = 5;
}

message Line {
  string label = 1;
  bool hide_label_in_legend = 2;
  repeated openbot.common.Point2D point = 3;

  // If the 'color' property is undefined, a random one will be assigned.
  // See http://www.chartjs.org/docs/latest/charts/line.html
  // for all supported properties from chart.js
  map<string, string> properties = 4;
}

message Polygon {
  string label = 1;
  bool hide_label_in_legend = 2;
  repeated openbot.common.Point2D point = 3;

  // If the 'color' property is undefined, a random one will be assigned.
  // See http://www.chartjs.org/docs/latest/charts/line.html
  // for all supported properties from chart.js
  map<string, string> properties = 4;
}

message Car {
  string label = 1;
  bool hide_label_in_legend = 2;

  double x = 3;
  double y = 4;
  double heading = 5;
  string color = 6;
}

message Chart {
  string title = 1;
  Options options = 2;

  // data sets
  repeated Line line = 3;
  repeated Polygon polygon = 4;
  repeated Car car = 5;
}
