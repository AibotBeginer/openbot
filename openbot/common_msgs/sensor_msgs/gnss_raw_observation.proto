
syntax = "proto3";

package openbot.drivers.gnss;

// pre-defined GNSS band frequency ID
enum GnssBandID {
  BAND_UNKNOWN = 0;
  GPS_L1 = 1;
  GPS_L2 = 2;
  GPS_L5 = 3;
  BDS_B1 = 4;
  BDS_B2 = 5;
  BDS_B3 = 6;
  GLO_G1 = 7;
  GLO_G2 = 8;
  GLO_G3 = 9;
}

// observation and ephemeris related system time type
enum GnssTimeType {
  TIME_UNKNOWN = 0;
  GPS_TIME = 1;
  BDS_TIME = 2;
  GLO_TIME = 3;
  GAL_TIME = 4;
}

// observation and ephemeris related system type
enum GnssType {
  SYS_UNKNOWN = 0;
  GPS_SYS = 1;
  BDS_SYS = 2;
  GLO_SYS = 3;
  GAL_SYS = 4;
}

// type of pseudo-range
enum PseudoType {
  CODE_UNKNOWN = 0;
  CORSE_CODE = 1;
  PRECISION_CODE = 2;
}

// This message defines one band observation of a certain satellite
message BandObservation {
  // observation on a certain frequency band
  GnssBandID band_id = 1;
  double frequency_value = 2;
  PseudoType pseudo_type = 3;
  // unit in meter
  double pseudo_range = 4;
  // unit in cycle
  double carrier_phase = 5;
  // Indicator of losing tracking of the signal
  uint32 loss_lock_index = 6;
  // unit in /s
  double doppler = 7;
  // Signal strength: signal noise ratio or carrier noise ratio
  float snr = 8;
}

// This message defines one satellite observation of a certain epoch
message SatelliteObservation {
  uint32 sat_prn = 1;
  GnssType sat_sys = 2;
  uint32 band_obs_num = 3;
  repeated BandObservation band_obs = 4;
}

// This message defines one epoch observation on a certain time of a receiver
message EpochObservation {
  // Unique id to a certain receiver
  // 0 for rover, otherwise for baser, supporting multi-baser mode
  uint32 receiver_id = 1;
  GnssTimeType gnss_time_type = 2;
  uint32 gnss_week = 3;
  double gnss_second_s = 4;
  // Baser observation should be bound with coordinates
  // unit in meter
  double position_x = 5;
  // unit in meter
  double position_y = 6;
  // unit in meter
  double position_z = 7;
  // Health indicator: 0 for healthy while 1 for bad observation
  uint32 health_flag = 8;
  // Number of observed satellites
  uint32 sat_obs_num = 9;
  // Group of observed satellite observation
  repeated SatelliteObservation sat_obs = 10;
}

// This message defines main six keppler orbit parameters and perturbations,
// designed for gps, beidou, (also supporting gnss, galileo)
message KepplerOrbit {
  GnssType gnss_type = 1;
  uint32 sat_prn = 2;
  GnssTimeType gnss_time_type = 3;
  // TOC: time of clock
  uint32 year = 4;
  uint32 month = 5;
  uint32 day = 6;
  uint32 hour = 7;
  uint32 minute = 8;
  double second_s = 9;
  // GNSS week number
  uint32 week_num = 10;
  double reserved = 11;
  double af0 = 12;   // clock correction(sec)
  double af1 = 13;   // clock correction(sec/sec)
  double af2 = 14;   // clock correction(sec/sec2)
  double iode = 15;  // Issue Of Data, Ephemeris in subframes 2 and 3
  double deltan =
      16;  // mean anomaly correction semi-circles per sec*pi = rads
  double m0 = 17;  // mean anomaly at ref time semi-circles*pi = rads
  double e = 18;   // eccentricity
  double roota = 19;  // sqr root a ( meters 1/2 )
  double toe = 20;    // ref time (sec) of ephemeris
  double toc = 21;    // ref time (sec) of clock
  double cic = 22;    // harmonic correction term(rads)
  double crc = 23;    // harmonic correction term(meters)
  double cis = 24;    // harmonic correction term(rads)
  double crs = 25;    // harmonic correction term(meters)
  double cuc = 26;    // harmonic correction term(rads)
  double cus = 27;    // harmonic correction term(rads)
  double omega0 =
      28;  // longitude  of ascending node semi-circles*pi = rads
  double omega = 29;  // argument of perigee semi-circles*pi
  double i0 = 30;     // inclination angle at ref time semi-circles*pi
  double omegadot = 31;  // rate of right ascension semi-circles/sec*pi
  double idot = 32;      // rate of inclination semi-circles/sec*pi
  double codesonL2channel = 33;  // pseudo range codes on L2
  uint32 L2Pdataflag = 34;       // data flag of L2P
  uint32 accuracy = 35;          // user range accuracy
  uint32 health = 36;            // satellite health: 0=good,1=bad
  double tgd = 37;               // group delay (s)
  double iodc = 38;              // Issue Of Data, Clock
}

// This message defines orbit parameters of GLONASS
message GlonassOrbit {
  GnssType gnss_type = 1;
  uint32 slot_prn = 2;
  GnssTimeType gnss_time_type = 3;
  // refer to GLONASS time and toc == toe
  double toe = 4;
  // must convert toe to UTC(+0) format and fulfill year, month...second_s,etc.
  uint32 year = 5;
  uint32 month = 6;
  uint32 day = 7;
  uint32 hour = 8;
  uint32 minute = 9;
  double second_s = 10;
  // unit in meter
  int32 frequency_no = 11;
  // GNSS week number
  uint32 week_num = 12;
  // GNSS week second in seconds
  double week_second_s = 13;
  // frame broadcasted time
  double tk = 14;
  // clock correction(sec/sec),warning: set clock_offset = -TauN
  double clock_offset = 15;
  // clock correction(sec/sec2),warning: set clock_drift = +GammaN
  double clock_drift = 16;
  // Satellite health : 0=good,1=bad
  uint32 health = 17;
  // unit in meter
  double position_x = 18;
  double position_y = 19;
  double position_z = 20;
  // unit in m/s
  double velocity_x = 21;
  double velocity_y = 22;
  double velocity_z = 23;
  // unit in m/s2
  double accelerate_x = 24;
  double accelerate_y = 25;
  double accelerate_z = 26;
  double infor_age = 27;
  uint32 sat_prn = 28;
}

// This message encapsulates keppler orbit message and glonass message
message GnssEphemeris {
  GnssType gnss_type = 1 ;
  KepplerOrbit keppler_orbit = 2;
  GlonassOrbit glonass_orbit = 3;
}
